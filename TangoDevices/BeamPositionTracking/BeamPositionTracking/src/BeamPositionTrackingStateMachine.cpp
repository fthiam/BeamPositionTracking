static const char *RcsId = "$Id $";
//+=============================================================================
//
// file :         BeamPositionTrackingStateMachine.cpp
//
// description :  C++ source for the BeamPositionTracking and its alowed 
//                methods for commands and attributes
//
// project :      TANGO Device Server
//
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// SVN only:
// $HeadURL: $
//
// CVS only:
// $Source:  $
// $Log:  $
//
// copyleft :     European Synchrotron Radiation Facility
//                BP 220, Grenoble 38043
//                FRANCE
//
//-=============================================================================
//
//  		This file is generated by POGO
//	(Program Obviously used to Generate tango Object)
//
//         (c) - Software Engineering Group - ESRF
//=============================================================================

#include <tango.h>
#include <BeamPositionTracking.h>
#include <BeamPositionTrackingClass.h>

/*====================================================================
 *	This file contains the methods to allow commands and attributes
 * read or write execution.
 *
 * If you wand to add your own code, add it between 
 * the "End/Re-Start of Generated Code" comments.
 *
 * If you want, you can also add your own methods.
 *====================================================================
 */

namespace BeamPositionTracking_ns
{

//=================================================
//		Attributes Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		BeamPositionTracking::is_computedTime_allowed
// 
// description : 	Read/Write allowed for computedTime attribute.
//
//-----------------------------------------------------------------------------
bool BeamPositionTracking::is_computedTime_allowed(Tango::AttReqType type)
{
	if (get_state() == Tango::FAULT	||
		get_state() == Tango::DISABLE)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		BeamPositionTracking::is_xAxisTarget_allowed
// 
// description : 	Read/Write allowed for xAxisTarget attribute.
//
//-----------------------------------------------------------------------------
bool BeamPositionTracking::is_xAxisTarget_allowed(Tango::AttReqType type)
{
	if (get_state() == Tango::DISABLE)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		BeamPositionTracking::is_yAxisTarget_allowed
// 
// description : 	Read/Write allowed for yAxisTarget attribute.
//
//-----------------------------------------------------------------------------
bool BeamPositionTracking::is_yAxisTarget_allowed(Tango::AttReqType type)
{
	if (get_state() == Tango::DISABLE)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		BeamPositionTracking::is_xAxisCurrentBeamPosition_allowed
// 
// description : 	Read/Write allowed for xAxisCurrentBeamPosition attribute.
//
//-----------------------------------------------------------------------------
bool BeamPositionTracking::is_xAxisCurrentBeamPosition_allowed(Tango::AttReqType type)
{
	if (get_state() == Tango::INIT	||
		get_state() == Tango::FAULT)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		BeamPositionTracking::is_yAxisCurrentBeamPosition_allowed
// 
// description : 	Read/Write allowed for yAxisCurrentBeamPosition attribute.
//
//-----------------------------------------------------------------------------
bool BeamPositionTracking::is_yAxisCurrentBeamPosition_allowed(Tango::AttReqType type)
{
	if (get_state() == Tango::INIT	||
		get_state() == Tango::FAULT)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}

//+----------------------------------------------------------------------------
//
// method : 		BeamPositionTracking::is_warningZoneXCenter_allowed
// 
// description : 	Read/Write allowed for warningZoneXCenter attribute.
//
//-----------------------------------------------------------------------------
bool BeamPositionTracking::is_warningZoneXCenter_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		BeamPositionTracking::is_warningZoneYCenter_allowed
// 
// description : 	Read/Write allowed for warningZoneYCenter attribute.
//
//-----------------------------------------------------------------------------
bool BeamPositionTracking::is_warningZoneYCenter_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		BeamPositionTracking::is_warningZoneRadius_allowed
// 
// description : 	Read/Write allowed for warningZoneRadius attribute.
//
//-----------------------------------------------------------------------------
bool BeamPositionTracking::is_warningZoneRadius_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		BeamPositionTracking::is_thresholdedImage_allowed
// 
// description : 	Read/Write allowed for thresholdedImage attribute.
//
//-----------------------------------------------------------------------------
bool BeamPositionTracking::is_thresholdedImage_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		BeamPositionTracking::is_xAxisRegulationThreshold_allowed
// 
// description : 	Read/Write allowed for xAxisRegulationThreshold attribute.
//
//-----------------------------------------------------------------------------
bool BeamPositionTracking::is_xAxisRegulationThreshold_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		BeamPositionTracking::is_yAxisRegulationThreshold_allowed
// 
// description : 	Read/Write allowed for yAxisRegulationThreshold attribute.
//
//-----------------------------------------------------------------------------
bool BeamPositionTracking::is_yAxisRegulationThreshold_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		BeamPositionTracking::is_fixedMode_allowed
// 
// description : 	Read/Write allowed for fixedMode attribute.
//
//-----------------------------------------------------------------------------
bool BeamPositionTracking::is_fixedMode_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}

//=================================================
//		Commands Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		BeamPositionTracking::is_StartBeamTracking_allowed
// 
// description : 	Execution allowed for StartBeamTracking command.
//
//-----------------------------------------------------------------------------
bool BeamPositionTracking::is_StartBeamTracking_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::INIT	||
		get_state() == Tango::RUNNING	||
		get_state() == Tango::FAULT	||
		get_state() == Tango::STANDBY	||
		get_state() == Tango::DISABLE)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		BeamPositionTracking::is_StopBeamTracking_allowed
// 
// description : 	Execution allowed for StopBeamTracking command.
//
//-----------------------------------------------------------------------------
bool BeamPositionTracking::is_StopBeamTracking_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::INIT	||
		get_state() == Tango::FAULT	||
		get_state() == Tango::STANDBY	||
		get_state() == Tango::DISABLE	||
		get_state() == Tango::ON)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		BeamPositionTracking::is_ActuatorSystemCalibration_allowed
// 
// description : 	Execution allowed for ActuatorSystemCalibration command.
//
//-----------------------------------------------------------------------------
bool BeamPositionTracking::is_ActuatorSystemCalibration_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		BeamPositionTracking::is_AcknowlegeStep_allowed
// 
// description : 	Execution allowed for AcknowlegeStep command.
//
//-----------------------------------------------------------------------------
bool BeamPositionTracking::is_AcknowlegeStep_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}

}	// namespace BeamPositionTracking_ns
